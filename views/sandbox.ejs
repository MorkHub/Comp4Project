<!DOCTYPE html>
<html lang="en">
	<head>
    <% include partials/head %>
	</head>
	<body class="container">

    <header>
        <% include partials/header %>
    </header>

    <main>
        <div class="row">
          <div class="col-sm-12">
					<% include partials/error %>
					<% if ( user_id !== undefined ) { %>
						<div class="panel panel-default">
							<div class="panel-heading">
								<h3 class="panel-title">File Manager</h3>
							</div>
							<div class="panel-body">
								<table class="table">
									<tr>
										<th>Filename</th>
										<th>Description</th>
										<th>Date Modified</th>
									</tr>
									<tr>
										<td></td>
										<td></td>
										<td></td>
									</tr>									
								</table>
							</div>
						</div>
					<% } %>
            <div class="panel panel-default">
							<div class="panel-heading">
								<!--<button class="debug btn btn-success">Debug</button>-->
								<% if ( user_id !== undefined ) { %>
									<button class="btn btn-success" type="button" data-toggle="modal" data-target="#saveModal">Save File</button> 
									<button type="button" class="btn btn-danger" id="resetButton">Reset</button>
								<% } else { %>
									<h3 class="panel-title">Sandbox</h3>
								<% } %>
							</div>
              <div class="panel-body" style="padding:0;">
                <div id="paper"></div>
              </div>
            </div>
          </div>
        </div>
    </main>

    <footer>
        <% include partials/footer %>
    </footer>

		<save>
			<div class="modal fade" id="saveModal" aria-labelledby="saveModalTitle" tabindex="-1" role="dialog">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
							<h4 class="modal-title" id="saveModalTitle">Save File</h4>
						</div>
						<div class="modal-body">
							<div class="form-group">
								<label for="fileDesc">Description</label>
								<textarea class="form-control" id="fileDesc" rows="5" laceholder="Description of file"></textarea>
							</div>
							<div class="form-group">
								<label for="fileAuthor">Author</label>
								<input type="text" class="form-control" id="fileAuthor" placeholder="John Doe">
							</div>
						</div>
						<div class="modal-footer">
							<div class="form-group col-sm-10">
								<input type="text" class="form-control" id="filename" placeholder="filename.gates">
							</div>
							<button type="button" class="col-sm-2 btn btn-primary" id="saveButton">Save</button>
						</div>
					</div>
				</div>
			</div>
		</save>

		<link rel="stylesheet" type="text/css" href="/css/joint.css" />
		<script src="/js/lodash.min.js"></script>
		<script src="/js/backbone-min.js"></script>
		<script src="/js/joint.js"></script>
		<script src="/js/logic.js"></script>
		<link rel="stylesheet" href="/css/logic.css" />
		<script src="https://cdn.socket.io/socket.io-1.3.7.js"></script>
		<script>
			var backupGates = JSON.parse(JSON.stringify(gates)),backupWires = JSON.parse(JSON.stringify(wires)); user = undefined;
			project = { name: "1s Clock", desc: "Circuit that alternates between on and off once per second.", author: "Jointjs",  }
			var socket = io ( "http://themork.co.uk:25566" );
			var usr = "", pwd = "";
			socket.on ( "connected", function()
			{
				usr = <% if ( user_id !== undefined ) { %>"<%= print.name %>"<% } else { %><%= "null" %><% } %>;
				pwd = <% if ( user_id !== undefined ) { %>"<%= print.password %>"<% } else { %><%= "null" %><% } %>;
				//alert ( "Hello, <%= user.name %>, your username is " + usr + ", and your password is " + pwd );
				socket.emit ( "login", { usr: usr, pwd: pwd } );
			});
				socket.on ( 'broadcast', function ( data )
				{
					console.log ( data );
				});
			socket.on ( 'login_response', function ( data )
			{
				user = data;
				console.log ( "Username: " + user.username + "\nName: " + user.name );
				files = data.files
			});
			function saveToServer ( filename, desc, author ) {
				if ( user !== undefined && user.username.toString().trim() !== "" )
				{
					var saveData = {
						project: { name: filename, desc: desc, author: author },
						gates: gates,
						wires: wires,
					}
					socket.emit (  'save_data', { user: user, saveData: saveData } )
					return true;
				}
				return false;
			}

			function loadFromServer ( filename )
			{
				if ( user !== undefined && user.username.toString().trim() !== "" )
				{
					socket.emit( 'load_data', { user: { username: usr, password: pwd } , target: filename } );
				}
			}

			socket.on ( 'load_data', function ( data )
			{
				console.log("data received");
				gates = data.gates;
				wires = data.wires;
				project = data.project;
				graph.resetCells();
				refresh();
			});

			function refresh()
			{
				graph.addCells(_.toArray(gates));
        _.each(wires, function(attributes) {
          graph.addCell(paper.getDefaultLink().set(attributes));
        });
			}

			$("#resetButton").click ( function ( )
			{
				graph.resetCells();
				gates = backupGates; wires = backupWires;
				refresh();
			});

			paper.on('cell:pointerdown', function( cellView, event )
			{
				switch ( event.button )
				{
					case 1: var type = cellView.model.attributes.type.split ( "." ) || [ "none", "none" ];
									var pos = cellView.model.attributes.position || { x:0, y:0 };
									var id = Date.now();
									console.log  ( type )
									if ( type [0].toLowerCase() == "logic" && type [1] !== "Wire" )
									{
										gates [ id ] = new joint.shapes.logic [ type[1] ] ( { position: pos } );
										graph.addCell ( gates [ id ] );
									}
									break;
					case 2: cellView.model.remove(); break;
				}
			});

			$('#paper').mousedown(function(e){if(e.button==1)return false});
			$('#paper').bind('contextmenu',function(e){return false;});

			$( "#saveButton" ).click ( function()
			{
				saveToServer ( $( "#filename" ).val(), $( "#fileDesc " ).val(), $( "#fileAuthor" ).val() );
			});
		</script>

	</body>
</html>
